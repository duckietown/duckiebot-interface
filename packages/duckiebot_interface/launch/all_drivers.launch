<?xml version="1.0"?>
<launch>
    <arg name="veh" doc="Name of vehicle. ex: megaman"/>
    <arg name="param_file_name" default="default" doc="Specify a param file. ex:default."/>
    <arg name="robot_type"
         doc="The type of the robot, e.g., duckiebot, watchtower, traffic_light, ..."/>
    <arg name="robot_configuration"
         doc="The configuration of the robot. For example DB19, DB20, ..."/>
    <arg name="camera_required" value="$(eval arg('robot_type') != 'traffic_light')"
         doc="Do we kill everything if the camera doesn't work?"/>
    <arg name="robot_xurdf" value="$(find duckiebot_interface)/urdf/$(arg robot_type).urdf.xacro"
         doc="Location of the URDF XACRO file for the robot type"/>

    <!-- Robot Descriptor: takes a XACRO file, makes a URDF out of it and publishes it -->
    <param name="robot_description"
           command="xacro '$(arg robot_xurdf)' model:=$(arg robot_configuration) veh:=$(arg veh)"/>
    <node ns="$(arg veh)" pkg="robot_state_publisher" type="robot_state_publisher"
          name="robot_state_publisher"/>

    <!-- Camera Node: reads frames from a physical camera and produces ROS messages -->
    <group unless="$(eval arg('robot_type') in ['duckietown'])">
        <include file="$(find camera_driver)/launch/camera_node.launch">
            <arg name="veh" value="$(arg veh)"/>
            <arg name="param_file_name" value="$(arg robot_type)"/>
            <arg name="required" value="$(arg camera_required)"/>
        </include>
    </group>

    <!-- LED Emitter: reads ROS messages and commands the LEDs -->
    <group unless="$(eval arg('robot_type') in ['watchtower', 'duckietown'])">
        <include file="$(find led_emitter)/launch/led_emitter_node.launch">
            <arg name="veh" value="$(arg veh)"/>
            <arg name="robot_type" value="$(arg robot_type)"/>
        </include>
    </group>

    <!-- Joystick: reads from a physical joystick and produces ROS messages -->
    <group if="$(eval arg('robot_type') == 'duckiebot')">
        <include file="$(find joystick)/launch/joystick_node.launch">
            <arg name="veh" value="$(arg veh)"/>
            <arg name="param_file_name" value="$(arg param_file_name)"/>
        </include>

        <!-- Wheel Drivers: reads ROS messages and spins the motors -->
        <include file="$(find wheels_driver)/launch/wheels_driver_node.launch">
            <arg name="veh" value="$(arg veh)"/>
            <arg name="param_file_name" value="$(arg param_file_name)"/>
        </include>
    </group>

    <!-- Traffic Light (Traffic Light robot only): commands the LEDs of a traffic light -->
    <group if="$(eval arg('robot_type') == 'traffic_light')">
        <remap from="led_emitter_node/custom_pattern" to="~custom_pattern"/>
        <include file="$(find traffic_light)/launch/traffic_light_node.launch">
            <arg name="veh" value="$(arg veh)"/>
        </include>
    </group>

    <!-- Wheel Encoders (DB19 and above robot only): reads data from wheel encoders -->
    <group if="$(eval arg('robot_type') == 'duckiebot' and arg('robot_configuration') != 'DB18')">
        <!-- Left Wheel Encoder  -->
        <remap from="left_wheel_encoder_node/wheels_cmd_executed"
               to="wheels_driver_node/wheels_cmd_executed"/>
        <include file="$(find wheel_encoder)/launch/wheel_encoder_node.launch">
            <arg name="veh" value="$(arg veh)"/>
            <arg name="wheel" value="left"/>
            <arg name="param_file_name" value="left_wheel"/>
        </include>

        <!-- Right Wheel Encoder  -->
        <remap from="right_wheel_encoder_node/wheels_cmd_executed"
               to="wheels_driver_node/wheels_cmd_executed"/>
        <include file="$(find wheel_encoder)/launch/wheel_encoder_node.launch">
            <arg name="veh" value="$(arg veh)"/>
            <arg name="wheel" value="right"/>
            <arg name="param_file_name" value="right_wheel"/>
        </include>
    </group>

    <!-- Time-of-Flight sensor: -->
    <!-- - DB21M: 1x ToF sensor at the Front Center      -->
    <group if="$(eval arg('robot_configuration') == 'DB21M')">
        <remap from="front_center_tof_driver_node/fragments" to="display_driver_node/fragments"/>
        <include file="$(find tof_driver)/launch/tof_node.launch">
            <arg name="veh" value="$(arg veh)"/>
            <arg name="name" value="front_center"/>
        </include>
    </group>

    <!-- OLED Display driver: -->
    <group if="$(eval arg('robot_configuration') == 'DB21M')">
        <remap from="display_driver_node/button" to="button_driver_node/event"/>
        <include file="$(find display_driver)/launch/display_driver_node.launch">
            <arg name="veh" value="$(arg veh)"/>
        </include>
    </group>

    <!-- Display renderers: -->
    <group if="$(eval arg('robot_configuration') == 'DB21M')">
        <!-- health: renders health and usage info about the robot -->
        <include file="$(find display_renderers)/launch/health_renderer_node.launch">
            <arg name="veh" value="$(arg veh)"/>
        </include>
        <!-- networking: renders connectivity status -->
        <include file="$(find display_renderers)/launch/networking_renderer_node.launch">
            <arg name="veh" value="$(arg veh)"/>
        </include>
    </group>

    <!-- Button driver -->
    <group if="$(eval arg('robot_configuration') == 'DB21M')">
        <remap from="button_driver_node/fragments" to="display_driver_node/fragments"/>
        <include file="$(find button_driver)/launch/button_driver_node.launch">
            <arg name="veh" value="$(arg veh)"/>
        </include>
    </group>

    <!-- IMU sensor: -->
    <group if="$(eval arg('robot_configuration') == 'DB21M')">
        <include file="$(find imu)/launch/imu_node.launch">
            <arg name="veh" value="$(arg veh)"/>
        </include>
    </group>

    <!-- Robot HTTP API: provides an HTTP API through which we can control the Robot -->
    <include file="$(find robot_http_api)/launch/robot_http_api_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="robot_type" value="$(arg robot_type)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>
    </include>

</launch>
